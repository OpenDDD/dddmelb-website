{
  "id": "4fa335ae-f910-4df8-9037-d6eb6738d448",
  "title": "Railway Oriented Programming: C# Edition",
  "names": "",
  "twitters": "",
  "websites": "",
  "abstract": "Do you ever feel dirty when adding if statements and try catches to your code to handle basic errors, catch exceptions and/or log events?\r\nMaybe your code started off as a few basic lines but then blew up into a nested mess of branches after you handled every expected error. \r\nOr maybe you're envious of your functional programming friends and want to learn something new?\r\n\r\nWe've already seen the introduction of functional programming techniques when it comes to lists and events in procedural languages.\r\nIn this talk, I'll show you another technique functional programmers use to handle errors and how you can apply it yourself.\r\n\r\nPopularised by Scott Wlaschin on his site F# for fun for profit. I bring the concept to C# with practical examples and an easy explanation\r\nwithout the functional jargon. This technique has been battle tested and I'll gladly share the pros and cons as well as solutions to common situations you may face.\r\n\r\nBy the end of this talk, you'll be able to streamline your code to write clean, happy path programming where the business objective can be quickly understood."
}