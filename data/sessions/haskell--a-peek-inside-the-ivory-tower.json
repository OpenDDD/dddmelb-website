{
  "id": "d917d293-81da-47ea-b825-8e2339eb50d9",
  "title": "Haskell - A Peek Inside the Ivory Tower",
  "names": [
    "D. Chambers"
  ],
  "twitters": [
    "danielchmbrs"
  ],
  "abstract": "Functional programming is becoming more and more popular and is starting to penetrate mainstream software development. You may have already used languages and libraries that support a functional programming style. But one language stands out as the epitome of functional programming: Haskell. What is it about Haskell that makes it a pure functional programming language? What features does it provide that can help us write quality, maintainable software? How can Haskell give us the confidence to safely refactor and change our software over time?\r\n\r\nIn this talk we'll take a tour around the Haskell language and see what makes Haskell an all-in functional programming language. We'll look at both Haskell's strengths and its weaknesses. We'll look at what sets coding in Haskell apart from coding in languages like F#, or coding FP-style in languages like JavaScript. We'll also dispel the myth that Haskell is not suitable for \"normal\" software. By the end of the talk, your peek inside Haskell's ivory tower will hopefully entice you to explore its potential further."
}